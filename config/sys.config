%% -*- erlang -*-
[{node, [
    {primary_workers, [
        node_utils_server,
        node_storage_server
    ]},
    {distributed_workers, [
        generic_tasks_server,
        generic_tasks_worker,
        sensor_server_worker,
        node_stream_worker
    ]},
    {node_sensor_server_worker_measurements, [temp]},
    {timed_apps, [lasp]},
    {generic_tasks_sets_names, [tasks]},
    {data_crdts_names, [{temp, dont_flush_crdt}]},
    {generic_tasks_restart_interval, 60000},
    {gc_interval, 60000},
    {als_stream_interval, 20000},
    {als_propagation_treshold, 10},
    {temp_stream_interval, 20000},
    {memcheck_interval, 40000},
    % Hosts used in env variables must be declared
    % beforehand using erl_inetrc config file
    {remote_hosts,
        % #{webservers => ['nodews@Laymer'],
        #{webservers => [],
          aws_servers => []}
    },
    {data_dir, "data"}
]},

{lasp, [{membership, false},
        {storage_backend, lasp_ets_storage_backend},
        % {mode, state_based},
        {mode, delta_based},
        % see https://github.com/lasp-lang/lasp/commit/a9422207e554e47495c7c488450a238274844eb9
        {propagate_on_update, true},
        {plumtree_peer_refresh_interval, 2000},
        {state_sync_interval, 2000},
        {delta_interval, 2000}]},

{lager, [
  {handlers, [
    {lager_console_backend, [{level, error}]}
  ]}
]},

% {logger, [
%   {level, error}
% ]},
% {os_mon, [
%   {start_os_sup, true},
%   {start_cpu_sup, true},
%   {start_disk_sup, false}[
% {task1,all,#Fun<node_app.0.34321799>,{<0.1007.0>,#Ref<0.1812322877.440926209.151804>}},0]
% ]},
% lists:flatlength([{task1,all,#Fun<node_app.0.34321799>,{<0.1007.0>,#Ref<0.1812322877.440926209.151804>}},0]).
{kernel, [
    {logger_level, error},
    {logger, [{handler,
      default,
      logger_std_h,
      #{level => notice,
        formatter => {logger_formatter, #{single_line => true}}}
   }]}
]},

{plumtree, [{broadcast_exchange_timer, 2000},
           {broadcast_mods, [lasp_plumtree_backend]}]},

{partisan, [{partisan_peer_service_manager,
            partisan_hyparview_peer_service_manager},
            {channels, [1,2]}
]},

{grisp, [{drivers, [
                {spi, grisp_spi_drv},
                {gpio, grisp_gpio_drv},
                {i2c, grisp_i2c_drv}
            ]},
        {devices, [
            % {gpio1, pmod_amp2},
            % {uart, pmod_maxsonar},
            % {spi1, pmod_gyro},
            % {spi1, pmod_nav}
            {spi2, pmod_als}
        ]}
    ]}
].
